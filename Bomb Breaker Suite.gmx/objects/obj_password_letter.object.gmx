<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_password_letter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>letter_id = noone;
letter = "";
active = false;
different_key = true;
last_key = noone;

keyboard_lastkey = -1;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active) {
    image_index = 1;
    
    var key = keyboard_lastkey;
    
    if(key != -1 &amp;&amp; last_key != key) {
        switch(key) {
            case ord('A'):
                show_debug_message("'A' key pressed");
                letter = "A";
                successful = true;
            break;
            
            case ord('B'):
                show_debug_message("'B' key pressed");
                letter = "B";
                successful = true;
            break;
            
            case ord('C'):
                show_debug_message("'C' key pressed");
                letter = "C";
                successful = true;
            break;
            
            case ord('D'):
                show_debug_message("'D' key pressed");
                letter = "D";
                successful = true;
            break;
            
            case ord('E'):
                show_debug_message("'E' key pressed");
                letter = "E";
                successful = true;
            break;
            
            case ord('F'):
                show_debug_message("'F' key pressed");
                letter = "F";
                successful = true;
            break;
            
            case ord('G'):
                show_debug_message("'G' key pressed");
                letter = "G";
                successful = true;
            break;
            
            case ord('H'):
                show_debug_message("'H' key pressed");
                letter = "H";
                successful = true;
            break;
            
            case ord('I'):
                show_debug_message("'I' key pressed");
                letter = "I";
                successful = true;
            break;
            
            case ord('J'):
                show_debug_message("'J' key pressed");
                letter = "J";
                successful = true;
            break;
            
            case ord('K'):
                show_debug_message("'K' key pressed");
                letter = "K";
                successful = true;
            break;
            
            case ord('L'):
                show_debug_message("'L' key pressed");
                letter = "L";
                successful = true;
            break;
            
            case ord('M'):
                show_debug_message("'M' key pressed");
                letter = "M";
                successful = true;
            break;
            
            case ord('N'):
                show_debug_message("'N' key pressed");
                letter = "N";
                successful = true;
            break;
            
            case ord('O'):
                show_debug_message("'O' key pressed");
                letter = "O";
                successful = true;
            break;
            
            case ord('P'):
                show_debug_message("'P' key pressed");
                letter = "P";
                successful = true;
            break;
            
            case ord('Q'):
                show_debug_message("'Q' key pressed");
                letter = "Q";
                successful = true;
            break;
            
            case ord('R'):
                show_debug_message("'R' key pressed");
                letter = "R";
                successful = true;
            break;
            
            case ord('S'):
                show_debug_message("'S' key pressed");
                letter = "S";
                successful = true;
            break;
            
            case ord('T'):
                show_debug_message("'T' key pressed");
                letter = "T";
                successful = true;
            break;
            
            case ord('U'):
                show_debug_message("'U' key pressed");
                letter = "U";
                successful = true;
            break;
            
            case ord('V'):
                show_debug_message("'V' key pressed");
                letter = "V";
                successful = true;
            break;
            
            case ord('W'):
                show_debug_message("'W' key pressed");
                letter = "W";
                successful = true;
            break;
            
            case ord('X'):
                show_debug_message("'X' key pressed");
                letter = "X";
                successful = true;
            break;
            
            case ord('Y'):
                show_debug_message("'Y' key pressed");
                letter = "Y";
                successful = true;
            break;
            
            case ord('Z'):
                show_debug_message("'Z' key pressed");
                letter = "Z";
                successful = true;
            break;
            
            default:
                show_debug_message("No");
                letter = "";
                successful = false;
            break;
            
            
        }
        
        different_key = true;
        
        if(successful) {
            active = false;
            scr_goto_next_letter(letter_id);
        }
    } else {
        different_key = false;
    }
    
    last_key = key;
} else {
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = mouse_x;
yy = mouse_y;
keyboard_lastkey = -1;

if(position_meeting(xx, yy, self)) {
    active = true;
} else {
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (letter != "") {
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(x, y, letter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
