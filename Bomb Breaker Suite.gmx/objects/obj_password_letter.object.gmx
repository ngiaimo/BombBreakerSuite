<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_password_letter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the object
letter_id = noone;
column = noone;
letter = "";
active = false;
different_key = true;
last_key = noone;

keyboard_lastkey = -1;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if a key is pressed and if it is a letter, add it else do nothing
if(active) {
    image_index = 1;
    
    var key = keyboard_lastkey;
    
    if(key != -1 &amp;&amp; last_key != key) {
        switch(key) {
            case ord('A'):
                letter = "a";
                successful = true;
            break;
            
            case ord('B'):
                letter = "b";
                successful = true;
            break;
            
            case ord('C'):
                letter = "c";
                successful = true;
            break;
            
            case ord('D'):
                letter = "d";
                successful = true;
            break;
            
            case ord('E'):
                letter = "e";
                successful = true;
            break;
            
            case ord('F'):
                letter = "f";
                successful = true;
            break;
            
            case ord('G'):
                letter = "g";
                successful = true;
            break;
            
            case ord('H'):
                letter = "h";
                successful = true;
            break;
            
            case ord('I'):
                letter = "i";
                successful = true;
            break;
            
            case ord('J'):
                letter = "j";
                successful = true;
            break;
            
            case ord('K'):
                letter = "k";
                successful = true;
            break;
            
            case ord('L'):
                letter = "l";
                successful = true;
            break;
            
            case ord('M'):
                letter = "m";
                successful = true;
            break;
            
            case ord('N'):
                letter = "n";
                successful = true;
            break;
            
            case ord('O'):
                letter = "o";
                successful = true;
            break;
            
            case ord('P'):
                letter = "p";
                successful = true;
            break;
            
            case ord('Q'):
                letter = "q";
                successful = true;
            break;
            
            case ord('R'):
                letter = "r";
                successful = true;
            break;
            
            case ord('S'):
                letter = "s";
                successful = true;
            break;
            
            case ord('T'):
                letter = "t";
                successful = true;
            break;
            
            case ord('U'):
                letter = "u";
                successful = true;
            break;
            
            case ord('V'):
                letter = "v";
                successful = true;
            break;
            
            case ord('W'):
                letter = "w";
                successful = true;
            break;
            
            case ord('X'):
                letter = "x";
                successful = true;
            break;
            
            case ord('Y'):
                letter = "y";
                successful = true;
            break;
            
            case ord('Z'):
                letter = "z";
                successful = true;
            break;
            
            default:
                letter = "";
                successful = false;
            break;
            
            
        }
        
        different_key = true;
        
        if(successful) {
            active = false;
            scr_add_letter(column, letter_id, letter);
            scr_goto_next_letter(letter_id);
        }
    } else {
        different_key = false;
    }
    
    last_key = key;
} else {
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if this object is being clicked on
xx = mouse_x;
yy = mouse_y;
keyboard_lastkey = -1;

if(position_meeting(xx, yy, self)) {
    active = true;
} else {
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self and a letter if one exists
draw_self();

if (letter != "") {
    draw_set_color(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text(x, y, letter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
