<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instantiate global variables
global.batteries = 0;
global.serial_vowel = false;
global.serial_odd = false;
global.parallel_port = false;
global.lit_car = false;
global.lit_frk = false;

letter_array[0] = "a";
letter_array[1] = "b";
words = scr_solve_password(letter_array, letter_array, letter_array, letter_array, letter_array);
for (var i = 0; i &lt; array_length_1d(words); i++) {
    show_debug_message(words[i]);
}
//solve_keypad(spr_bolt, spr_a_t, spr_t_tripod, spr_backward_c_dot);
//solve_keypad(spr_black_star, spr_b_t, spr_smiley, spr_paragraph);
//solve_keypad(spr_black_star, spr_b_t, spr_smiley, spr_omega);
//solve_keypad(spr_smiley, spr_b_t, spr_black_star, spr_trident);

/*top_row[0] = true;
top_row[1] = false;
top_row[2] = true;
top_row[3] = false;
top_row[4] = true;
top_row[5] = false;

bottom_row[0] = false;
bottom_row[1] = false;
bottom_row[2] = true;
bottom_row[3] = true;
bottom_row[4] = true;
bottom_row[5] = false;

show_message(solve_needy_knob(top_row, bottom_row));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go back to previous room
room_goto(rm_main_board_room);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw a gui depending on the module
switch(room) {
    /*case rm_checklist:
        draw_set_font(fnt_checklist);
        draw_set_halign(fa_left);
        draw_text_colour(150, 125, "Batteries: ", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(150, 200, "Serial has vowel: ", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(150, 275, "Serial ends with odd: ", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(150, 350, "parallel Port: ", c_black, c_black, c_black, c_black, 1);
    break;*/
    default:
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
